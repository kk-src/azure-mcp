<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Version>0.0.12</Version>
    <OutputType>Exe</OutputType>
    <CliName>azmcp</CliName>
    <AssemblyName>$(CliName)</AssemblyName>
    <AssemblyTitle>Azure MCP Server</AssemblyTitle>
    <RootNamespace>AzureMcp</RootNamespace>

    <!-- Publishing settings -->
    <IsAotCompatible>true</IsAotCompatible>
    <PublishSingleFile>false</PublishSingleFile>
    <SelfContained>false</SelfContained>
    <PublishReadyToRun>false</PublishReadyToRun>
    <PublishTrimmed>false</PublishTrimmed>
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
    <DebugType>embedded</DebugType>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <!-- Debug configuration -->
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <PublishSingleFile>false</PublishSingleFile>
    <SelfContained>false</SelfContained>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <!-- Multi-platform support -->
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <RuntimeIdentifiers>win-x64;linux-x64;osx-x64</RuntimeIdentifiers>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <RuntimeHostConfigurationOption Include="Azure.Experimental.EnableActivitySource" Value="true" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Azure.Core" />
    <PackageReference Include="Azure.Data.AppConfiguration" />
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Azure.Data.Tables" />
    <PackageReference Include="Azure.Identity.Broker" />
    <PackageReference Include="Azure.Monitor.Query" />
    <PackageReference Include="Azure.ResourceManager.AppConfiguration" />
    <PackageReference Include="Azure.ResourceManager.PostgreSql" Version="1.2.0" />
    <PackageReference Include="Azure.Security.KeyVault.Keys" />
    <PackageReference Include="Azure.Storage.Blobs" />
    <PackageReference Include="Azure.ResourceManager.CosmosDB" />
    <PackageReference Include="Azure.ResourceManager.OperationalInsights" />
    <PackageReference Include="Azure.ResourceManager.Search" />
    <PackageReference Include="Azure.ResourceManager.Storage" />
    <PackageReference Include="Microsoft.Identity.Client.Broker" />
    <PackageReference Include="ModelContextProtocol" />
    <PackageReference Include="ModelContextProtocol.AspNetCore" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" />
    <PackageReference Include="Microsoft.Azure.Cosmos" GeneratePathProperty="true" ExcludeAssets="runtime;native" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.Extensions.Hosting" />
    <PackageReference Include="Newtonsoft.Json" />
    <PackageReference Include="Npgsql" Version="9.0.3" />
    <PackageReference Include="System.CommandLine" />
    <PackageReference Include="System.Formats.Asn1" />
    <PackageReference Include="System.Linq.AsyncEnumerable" />
    <PackageReference Include="System.Net.ServerSentEvents" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
    <PackageReference Include="Azure.Monitor.OpenTelemetry.AspNetCore" />
    <PackageReference Include="Microsoft.Extensions.Azure" />
	<PackageReference Include="Azure.Search.Documents" />
  </ItemGroup>

  <!-- Runs before every dotnet build -->
  <Target Name="InstallGitHooks" BeforeTargets="BeforeBuild">
    <Message Text="Installing Git hooks..." Importance="high" />

    <!-- Run the Install-GitHooks.ps1 script using PowerShell Core -->
    <Exec Command="pwsh -ExecutionPolicy Bypass -NoProfile -File &quot;$(MSBuildProjectDirectory)/../eng/scripts/Install-GitHooks.ps1&quot;"
          ContinueOnError="true"
          ConsoleToMsBuild="true"
          IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode"/>
    </Exec>

    <!-- Display informative message if pwsh fails -->
    <Warning Text="Could not install Git hooks. PowerShell Core (pwsh) is required to install Git hooks:\nhttps://learn.microsoft.com/powershell/scripting/install/installing-powershell"
             Condition="'$(ExitCode)' != '0'" />
  </Target>

  <!-- Remove Cosmos native files from the build output directory -->
  <Target Name="RemoveCosmosNativeFiles" BeforeTargets="Build">
    <ItemGroup>
      <FilesToRemove Include="@(ContentWithTargetPath)" Condition="$([System.String]::Copy(`%(FullPath)`).Contains(`$(PkgMicrosoft_Azure_Cosmos)`))" />
    </ItemGroup>
    <ItemGroup>
      <ContentWithTargetPath Remove="@(FilesToRemove)" />
    </ItemGroup>
  </Target>
</Project>
